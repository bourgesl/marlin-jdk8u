# HG changeset patch
# User darcy
# Date 1455642571 28800
#      Tue Feb 16 09:09:31 2016 -0800
# Node ID 4462913d471a2475f734a4fd74b1d1d4c3934bad
# Parent  752d505da547e1d3944eb53f50c821e60e059aa2
8149896: Remove unnecessary values in FloatConsts and DoubleConsts
Reviewed-by: shade, psandoz, lbourges, mduigou

diff --git a/src/share/classes/sun/java2d/marlin/FloatMath.java b/src/share/classes/sun/java2d/marlin/FloatMath.java
--- a/src/share/classes/sun/java2d/marlin/FloatMath.java
+++ b/src/share/classes/sun/java2d/marlin/FloatMath.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2015, 2016, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
@@ -24,7 +24,6 @@
  */
 package sun.java2d.marlin;
 
-import jdk.internal.math.DoubleConsts;
 import jdk.internal.math.FloatConsts;
 
 /**
@@ -210,14 +209,4 @@
         }
         return intpart - 1;
     }
-
-    /**
-     * Returns a floating-point power of two in the normal range.
-     */
-    static double powerOfTwoD(int n) {
-        assert (n >= DoubleConsts.MIN_EXPONENT && n <= DoubleConsts.MAX_EXPONENT);
-        return Double.longBitsToDouble((((long) n + (long) DoubleConsts.EXP_BIAS)
-                << (DoubleConsts.SIGNIFICAND_WIDTH - 1))
-                & DoubleConsts.EXP_BIT_MASK);
-    }
 }
diff --git a/src/share/classes/sun/java2d/marlin/Renderer.java b/src/share/classes/sun/java2d/marlin/Renderer.java
--- a/src/share/classes/sun/java2d/marlin/Renderer.java
+++ b/src/share/classes/sun/java2d/marlin/Renderer.java
@@ -1,5 +1,5 @@
 /*
- * Copyright (c) 2007, 2015, Oracle and/or its affiliates. All rights reserved.
+ * Copyright (c) 2007, 2016, Oracle and/or its affiliates. All rights reserved.
  * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
  *
  * This code is free software; you can redistribute it and/or modify it
@@ -40,7 +40,7 @@
     private static final int ALL_BUT_LSB = 0xfffffffe;
     private static final int ERR_STEP_MAX = 0x7fffffff; // = 2^31 - 1
 
-    private static final double POWER_2_TO_32 = FloatMath.powerOfTwoD(32);
+    private static final double POWER_2_TO_32 = 0x1.0p32;
 
     // use float to make tosubpix methods faster (no int to float conversion)
     public static final float f_SUBPIXEL_POSITIONS_X
